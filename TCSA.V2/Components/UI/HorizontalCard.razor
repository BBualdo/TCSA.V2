@using TCSA.V2.Components.UI.SVGs
<div
    class="row horizontal-card-desktop horizontal-card d-flex align-items-center shadow rounded @(IsComplete ? "completed" : "")">
    <div class="row g-0">
        <div class="col-sm-1 col-md-1 d-flex align-items-center">
            <img src="img/cards/@IconUrl" class="img-fluid horizontal-card-img" alt="...">
        </div>
        <div class="col-sm-8 @(HasButton ? "col-md-8" : "col-md-11")">
            <p class="card-title-dashboard">@CardName</p>
            <p class="card-text"><small>@((MarkupString)Description)</small></p>
        </div>
        @if (HasButton)
        {
            <div class="col-sm-1 col-md-3 d-flex align-items-center">
                <button class="btn view-articles-btn" @onclick="OnClickCallback">
                    <DropdownSVG />
                </button>
            </div>
        }
    </div>
</div>

<div class="horizontal-card-mobile shadow rounded-3 p-2">
    <table>
        <tr>
            <th class="icon"><img src="img/cards/@IconUrl" class="img-fluid" width="40" alt="..."></th>
            <th class=@(HasButton ? "text-th" : "text-th-leaderboard-mobile")>
                <p class="card-title-dashboard">@CardName</p>
                <p class="card-text"><small>@((MarkupString)Description)</small></p>
            </th>

            @if (HasButton)
            {
                <th class="button-th">
                    <div class="col-sm-1 col-md-3 d-flex align-items-center">
                        <button class="btn view-articles-btn" @onclick="OnClickCallback">
                            <DropdownSVG />
                        </button>
                    </div>
                </th>
            }
        </tr>
    </table>
</div>


@code {
    [Parameter] public EventCallback OnClickCallback { get; set; }
    [Parameter] public string IconUrl { get; set; }
    [Parameter] public string CardName { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public bool IsComplete { get; set; }
    [Parameter] public bool HasButton { get; set; } = true;
}

<style>
    .completed {
        border: green solid 2px;
    }

    .card-text {
        margin: 0 0 0 10px;
    }

    table {
        width: 100%;
    }

    .button-th {
        text-align: right;
        width: 10%
    }

    .text-th {
        text-align: left;
        width: 70%;
    }

    .icon-th {
        text-align: center;
        width: 20%;
    }

    .view-articles-btn {
        background-color: var(--card-button-primary-color);
        color: var(--text-light-color);
    }

    .horizontal-card-desktop {
        padding: 20px;
    }

    .horizontal-card-img {
        width: 60px;
    }

    .card-title-dashboard {
        margin: 0 0 0 10px;
        font-size: 18px;
        font-family: Roboto, sans-serif;
        color: var(--primary-light-color);
        font-weight: 600;
    }
</style>
