@page "/"
@using TCSA.V2.Components.Main
@using TCSA.V2.Components.UI
@using TCSA.V2.Helpers
@using TCSA.V2.Models
@using static TCSA.V2.Helpers.Enums

<PageTitle>@StringConstants.PageTitle</PageTitle>

<MainBanner />
<LatestUpdates />
<HowItWorksArea Articles=@Articles />
<FirstStepsArea Articles=@Articles />

<div class="container certificate-container">
    <div class="row d-flex justify-content-center">
        <Card Type=Enums.CardType.Project Id=@CertificationProject.Id Slug="@CertificationProject.Slug"
            Title=@CertificationProject.Title Description=@CertificationProject.Description
            IconUrl=@CertificationProject.IconUrl />
    </div>
</div>

<div class="container w-75">
    <div class="row d-flex justify-content-center title mt-3">
        <h1 id="console-area"></h1>
        <div class="row d-flex justify-content-center text-center title">
            <p class="title-item"><img id="console_title" class="area-title" src="img/Titles/console-title.png" /> Console Apps</p>
        </div>
    </div>
    <div class="row d-flex justify-content-center">
        <Card Type="CardType.Article" Id=@ConsoleArticle.Id Slug=@ConsoleArticle.Slug Title=@ConsoleArticle.Title
            Description=@ConsoleArticle.Description IconUrl=@ConsoleArticle.IconUrl />
    </div>
    <div class="row d-flex justify-content-center">

        @foreach (var project in Projects.Where(x => x.Area == Area.Console && x.Id != 52 && x.Id != 75))
        {
            <Card Type="CardType.Project" Id=@project.Id Slug="@project.Slug" Title=@project.Title
                Description=@project.Description IconUrl=@project.IconUrl />
        }

        <Card Type=@CardType.Article Id=@GraduationArticle.Id Slug=@GraduationArticle.Slug
            Title=@GraduationArticle.Title Description=@GraduationArticle.Description
            IconUrl=@GraduationArticle.IconUrl />
    </div>
</div>

<div class="container w-75">
    @foreach (var area in Areas)
    {
        <IndexProjectSection Projects=@area.Projects TitleImgUrl=@area.TitleImgUrl Description=@area.Description
            Id=@area.Id />
    }
</div>


@code {
    protected List<Project> Projects = new();
    protected List<Article> Articles = new();
    protected List<IndexAreaInfo> Areas = new();
    protected Project CertificationProject = new();
    protected Article ConsoleArticle = new();
    protected Article GraduationArticle = new();

    protected override async Task OnInitializedAsync()
    {
        Articles = ArticleHelper.GetArticles();
        Projects = ProjectHelper.GetProjects();
        CertificationProject = Projects.Single(x => x.Id == 75);
        ConsoleArticle = Articles.Single(x => x.Id == 9);
        GraduationArticle = Articles.Single(x => x.Id == 10);

        GetAreas();
    }

    private void GetAreas()
    {
        var areas = new List<Area> { Area.StartApplying, Area.MVC, Area.Angular, Area.React, Area.Blazor, Area.MAUI, Area.Auth, Area.Azure, Area.SQL, Area.MonthlyChallenge, Area.GraduationProject };

        var titles = new List<string>
        {
            "apply-title.png|Start Applying",
            "mvc-title.png|MVC",
            "angular-title.png|Angular",
            "react-title.png|React",
            "blazor-title.png|Blazor",
            "maui-title.png|MAUI",
            "aa-title.png|Authentication & Authorization",
            "azure-title.png|Azure",
            "sql-title.png|SQL",
            "Challenge Projects",
            "Freestyle Projects",
        };

        var descriptions = new List<string>
        {
            "With these projects, you'll showcase your work and start applying for jobs.",
            "Learn the fundamentals of ASP.NET MVC",
            "Learn how .NET works together with this powerful front-end framework",
            "Learn how .NET works together with this powerful front-end framework",
            "Learn the latest .NET solution for web development",
            "Learn this fantastic technology to build apps for Android, iOS, MacOs and Windows.",
            "Learn to secure applications using .NET/C#",
            "Get started in cloud computing deploying applications to Microsoft's state-of-the-art cloud solution.",
            "Learn the language used to communicate with databases.",
            "Test your knowledge with a challenge provided by a real-world company given to job candidates.",
            "Bring your amazing idea to life with a professional standard project."
        };

        var ids = new List<string>
        {
            "jobs-area",
            "mvc-area",
            "angular-area",
            "react-area",
            "blazor-area",
            "maui-area",
            "auth-area",
            "cloud-area",
            "sql-area",
            "challenges-area",
            "flagship-area"
        };

        for (int i = 0; i < areas.Count; i++)
        {
            Areas.Add(new IndexAreaInfo
                {
                    Projects = areas[i] == Area.SQL
                ? Projects.Where(x => x.Area == areas[i] && !x.IsClosed).ToList()
                : Projects.Where(x => x.Area == areas[i])
                .ToList(),
                    TitleImgUrl = titles[i],
                    Description = descriptions[i],
                    Id = ids[i]
                });
        }
    }
}

<style>
    .certificate-container {
        background-color: black;
        padding-bottom: 50px;
        padding-top: 50px;
        width: 100% !important;
    }

    .start-applying {
        background-color: var(--primary-color);
        color: var(--text-light-color)
    }

    .title {
        font-size: 40px;
        font-weight: 600
    }

    .aa-title {
        max-width: 600px;
    }

    .area-title {
        max-width: 250px;
    }
</style>