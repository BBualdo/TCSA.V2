@using TCSA.V2.Models
@using TCSA.V2.Components.UI.SVGs
@using TCSA.V2.Models.DTO

<div class="col-sm-3">
    <div class="card m-3">
        <div class="text-center mt-3">
            <div class="video-paragraph d-flex mt-3 mb-4 justify-content-center embed-responsive embed-responsive-16by9">
                <iframe class="embed-responsive-item" width="100%" height="auto" src="@Item.VideoUrl" allowfullscreen></iframe>
            </div>
        </div>
        <div class="card-body">
            <p class="card-text">@Item.UserFirstName @Item.UserLastName</p>
            <p class="card-text">@Item.Area</p>
            <p class="card-text">@Item.ProjectName</p>
        </div>
        <AuthorizeView>
            @if (isUserOwner)
            {
                <div class="card-footer">
                    <button type="button" class="btn btn-outline-secondary" style="color:rebeccapurple;border:none" data-bs-toggle="modal" data-bs-target="#DeleteModal"><DeleteSvg /></button>
                </div>
            }
        </AuthorizeView>
    </div>
</div>

<div class="modal fade" id="DeleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete warning</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>This will delete selected video. Are you sure?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" style="color:rebeccapurple;border:none" @onclick="@HandleDelete" data-bs-dismiss="modal">Confirm delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ShowcaseItemDTO Item { get; set; }
    [Parameter]
    public string? CurrentUserId { get; set; }
    [Parameter]
    public EventCallback<ShowcaseItemDTO> OnDelete { get; set; }
    [Parameter]
    public EventCallback<ShowcaseItemDTO> OnGoldenChange { get; set; }

    private bool isUserOwner = false;

    protected override async Task OnInitializedAsync()
    {
        if (Item.ApplicationUserId == CurrentUserId)
            isUserOwner = true;
    }

    private async Task HandleDelete()
    {
        await OnDelete.InvokeAsync(Item);
    }
}
