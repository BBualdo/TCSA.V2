@using TCSA.V2.Data
@using TCSA.V2.Helpers
@using TCSA.V2.Models
@using TCSA.V2.Models.DTO
@using TCSA.V2.Services
@using System.Security.Claims
@using System;
@using System.Linq;

<li class="nav-item dropdown me-5">
    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        Select Area
    </a>
    <ul class="dropdown-menu @(IsLightMode ? "" : "dropdown-menu-dark")" aria-labelledby="navbarDropdown">
        @foreach (var area in CategoryListAreas)
        {
            var localArea = area;
            <li> <button type="button" class="btn dropdown-item" @onclick="()=>HandleClick(localArea)">@area</button></li>
        }
    </ul>
</li>





@code {
    [Parameter] public EventCallback<string> OnClickCallback { get; set; }
    [Parameter] public List<string> Areas { get; set; }
    private List<string> CategoryListAreas { get; set; }
    [Parameter] public bool IsLightMode{ get; set; }

    protected async override Task OnInitializedAsync()
    {
        CategoryListAreas = Areas.ToList();
        CategoryListAreas.Add("All");
    }

    private async Task HandleClick(string area)
    {
        if (OnClickCallback.HasDelegate)
        {
            await OnClickCallback.InvokeAsync(area);
        }
    }
}
