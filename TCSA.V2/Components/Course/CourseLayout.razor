@page "/course/{courseId:int}/article/{articleId:int}"

@using TCSA.V2.Models;
@using TCSA.V2.Helpers;

<div class="dashboard-layout-wrapper row vh-100">
    <div class="col-lg-1"></div>
    <div class="col-lg-2 d-lg-block col-sm-12 mt-5 pt-5 d-sm-none">
        <ul class="article-menu mt-2 space-y-2">
            @if (Course != null && Course.Articles.Any())
            {
                @foreach(var article in Course.Articles)
                {
                    <li class="article-item">
                        <a href="" @onclick="() => NavigateToArticle(article.CourseDisplayId.Value)"
                           class="block px-4 py-9 rounded-lg text-gray-800 hover:bg-gray-100 hover:text-blue-600 transition-all duration-200 ease-in-out
                           @(article.Id == ArticleId ? "bg-blue-500 text-white font-semibold" : "")">
                            @article.Title
                        </a>
                    </li>
                }
            }
            else
            {
                <p class="text-gray-600">Loading articles...</p>
            }
        </ul>
    </div>

    <div class="col-lg-6 col-sm-12">
        @if (Article != null)
        {
            <CoursePage 
                Article=@Article/>
        }
        else
        {
            <p class="text-gray-600">Loading article...</p>
        }
    </div>

    <div class="col-lg-2 d-lg-block d-sm-none pt-5 mt-5">
        <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4831088216810061"
                crossorigin="anonymous"></script>
        <!-- tcsa-course-side -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-4831088216810061"
             data-ad-slot="1533509954"
             data-ad-format="auto"
             data-full-width-responsive="true"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>
    <div class="col-lg-1"></div>
</div>

@code {
    [Parameter] public int CourseId { get; set; }
    [Parameter] public int ArticleId { get; set; }
    [Inject] NavigationManager NavigationManager { get; set; }

    private Course Course { get; set; }
    private Article Article { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Course = CourseHelper.GetCourses().FirstOrDefault(x => x.Id == CourseId);

        if (Course != null)
        {
            Article = Course.Articles.FirstOrDefault(a => a.CourseDisplayId == ArticleId);
        }
    }

    private void NavigateToArticle(int articleId)
    {
        NavigationManager.NavigateTo($"/course/{CourseId}/article/{articleId}", forceLoad: true);
    }
}
