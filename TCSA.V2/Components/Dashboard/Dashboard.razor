@page "/dashboard"
@using TCSA.V2.Components.Dashboard.Shared
@using TCSA.V2.Components.UI
@using TCSA.V2.Data
@using TCSA.V2.Services
@using System.Security.Claims;

@layout DashboardLayout

<div class="mt-5">
    @if (User != null)
    {
        <DashboardHeader Level=@User.Level
                         BeltImgUrl="/img/Belts/white.png"
                         FlagUrl="/img/Flags/earth.png"
                         ExperiencePoints=@User.ExperiencePoints
                         Ranking=1
                         DisplayName=@User.DisplayName />

        <HorizontalCard CardName="Foundations"
                        IsComplete=true
                        IconUrl="icons8-foundation-100.png"
                        Description="Description Here"
                        OnClickCallback=@ToggleFoundationSteps
                        HasButton=true/>
    }
</div>

@code {
    [Inject] private AuthenticationStateProvider AuthenticationState { get; set; }
    [Inject] private IProjectService ProjectService { get; set; }
    [Inject] private IUserService UserService { get; set; }

    ApplicationUser User;
    private string UserId;

    private bool foundationSteps;

    protected async override Task OnInitializedAsync()
    {
        var AuthSate = await AuthenticationState.GetAuthenticationStateAsync();

        if (AuthSate.User.Identity.IsAuthenticated)
        {
            var claims = AuthSate.User;
            UserId = claims.FindFirstValue(ClaimTypes.NameIdentifier);
            User = await UserService.GetUserById(UserId);
        }
    }

    private void ToggleFoundationSteps() => foundationSteps = !foundationSteps;
}
