@using System.Security.Claims
@using TCSA.V2.Helpers
@using TCSA.V2.Models
@using TCSA.V2.Services
@inject NavigationManager NavigationManager

<div class="dashboard-menu pt-3 mb-5 h-100">
    <nav class="flex-column">
        <div class="dashboard-menu pt-5 text-center h-100">
            <div class="row dashboard-side-card rounded">
                <div class="col-12 dashboard-side-card-text">
                    Code Reviews Available
                </div>
                <div class="col-12 dashboard-side-card-number">
                    @AvailableReviews
                </div>
            </div>
@*             <div class="row dashboard-side-card rounded">
                <div class="col-12 dashboard-side-card-text">
                    Community Project Issues Available
                </div>
                <div class="col-12 dashboard-side-card-number">
                    @AvailableIssues
                </div>
            </div> *@
            <div class="row justify-content-center">
                <div class="google-ad-container">
                    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4831088216810061"
                            crossorigin="anonymous"></script>

                    <ins class="adsbygoogle"
                         style="display:block"
                         data-ad-client="ca-pub-4831088216810061"
                         data-ad-slot="5111994013"
                         data-ad-format="auto"
                         data-full-width-responsive="true"></ins>
                    <script>
                        (adsbygoogle = window.adsbygoogle || []).push({});
                    </script>
                </div>
            </div>
        </div>
    </nav>
</div>

@code {
    [Inject] private AuthenticationStateProvider AuthenticationState { get; set; }

    [Inject] private ICommunityService CommunityService { get; set; }
    [Inject] private IPeerReviewService PeerReviewService { get; set; }

    private int AvailableReviews { get; set; }
    private int AvailableIssues { get; set; }
    private bool CodeReviewsAvailable { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var AuthSate = await AuthenticationState.GetAuthenticationStateAsync();

        var claims = AuthSate.User;
        var userId = claims.FindFirstValue(ClaimTypes.NameIdentifier);

        AvailableIssues = await CommunityService.GetAvailableIssuesCount();
        AvailableReviews = await PeerReviewService.GetAvailablePeerReviewsCount(userId);
    }

    private async Task NavigateToCodeReviews()
    {
        NavigationManager.NavigateTo("/dashboard/peer-reviews");
    }
}

<style>
    .dashboard-menu {
        background-color: var(--primary-color);
    }

    .dashboard-side-card {
        padding-top: 10px;
        margin: 10px;
        color: white;
        background-color: rgba(255, 255, 255, 0.37);
    }

    .dashboard-side-card-text {
        font-weight: 600;
    }

    .dashboard-side-card-number {
        font-size: 30px;
        font-weight: 600;
    }

    .google-ad-container {
        min-width: 250px;
        min-height: 250px;
        overflow: hidden;
    }
</style>