@page "/dashboard/leaderboard"
@layout DashboardLayout
@rendermode InteractiveServer

@using System.Security.Claims;
@using TCSA.V2.Components.Dashboard.Shared
@using TCSA.V2.Data
@using TCSA.V2.Helpers
@using TCSA.V2.Models
@using TCSA.V2.Models.DTOs
@using TCSA.V2.Services

<PageTitle>@StringConstants.PageTitle - Leaderboard</PageTitle>

<div class="mt-5 pt-3">
    @if (users != null && !isLoading)
    {
        <nav aria-label="Page navigation example">
            <btn class="btn btn-primary w-100 mb-3" @onclick="FilterReviews">Click to See @(isReviews ? "All Time" : "Reviews") Leaderboard</btn>

            @if (!is2024 && Ranking > 50)
            {
                @if (CurrentPage != 0)
                {
                    <btn class="btn btn-primary w-100 mb-3" @onclick="() => LoadPagination(0)">Click to See Top 50</btn>
                }
                else
                {
                    <btn class="btn btn-primary w-100 mb-3" @onclick="() => LoadPagination(Ranking / 50)">Click to See Your Ranking</btn>
                }

                if (isLoading)
                {
                    <h3>Loading...</h3>
                }
            }
        </nav>

        @if (is2024)
        {
            <p>*The 2024 leaderboard only takes in consideration projects submitted in 2024</p>
        }

        if (!isReviews)
        {
            <table class="table leaderboard-table mt-sm-5">
                <thead>
                    <tr>
                        <th scope="col">Pos</th>
                        <th scope="col">XP</th>
                        <th scope="col">Name</th>
                        <th scope="col" class="country-header">Country</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        <tr class="my-row @(user.Id == userId ? "is-user" : "")">
                            <th class="leaderboard-cell index-cell" scope="row">@user.Ranking</th>
                            <td class="leaderboard-cell">
                                <div class="belt-label-wrap d-flex align-items-center">
                                    <div class="belt-label">
                                        <img class="img-xp-leaderboard" src="img/experience.png" width="30" alt="...">
                                    </div>
                                    <div class="belt-label">
                                        <p class="leaderboard-xp">@user.ExperiencePoints</p>
                                    </div>
                                </div>
                            </td>
                            <td class="leaderboard-cell">
                                <div class="name-cell">
                                    <div class="name-cell-name">@(user.DisplayName ??= $"{user.FirstName} {user.LastName}")</div>
                                    <div class="name-cell-level">
                                        <div class="belt-name-wrap">
                                            <div class="belt-label">
                                                <img class="dashboard-belt" src="img/belts/@($"{user.Level}-belt.png")" width="20" alt="...">
                                            </div>
                                            <div class="belt-label">
                                                @user.Level Belt
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="leaderboard-cell country-cell">
                                @if (!string.IsNullOrEmpty(user.Country))
                                {
                                    <div class="row belt-label-wrap d-flex align-items-center">
                                        <div class="col-3 belt-label d-flex align-items-center">
                                            <img class="dashboard-flag" src="@FlagHelper.GetFlag(user.Country)" width="30" alt="...">
                                        </div>
                                        <div class="col-9 belt-label d-sm-none d-md-inline d-flex align-items-center">
                                            <p class="leaderboard-country">@user.Country</p>
                                        </div>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        } else if (reviewUsers != null && isReviews)
        {
            <table class="table leaderboard-table mt-sm-5">
                <thead>
                    <tr>
                        <th scope="col">Pos</th>
                        <th scope="col">Name</th>
                        <th scope="col">Total XP</th>
                        <th scope="col">Total Reviews</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in reviewUsers)
                    {
                        <tr class="my-row @(user.Id == userId ? "is-user" : "")">
                            <th class="leaderboard-cell index-cell" scope="row">@user.Ranking</th>
                            <td class="leaderboard-cell">
                                <div class="name-cell">
                                    <div class="name-cell-name">@(user.DisplayName ??= $"{user.FirstName} {user.LastName}")</div>
                                </div>
                            </td>
                            <td class="leaderboard-cell">
                                <div class="belt-label-wrap d-flex align-items-center">
                                    <div class="belt-label">
                                        <p class="leaderboard-xp">@user.TotalXp</p>
                                    </div>
                                </div>
                            </td>
                            <td class="leaderboard-cell">
                                <div class="name-cell">
                                    <div class="name-cell-name">@user.ReviewsNumber</div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
    else
    {
        <h3>Loading...</h3>
    }
</div>

@code {
    [Parameter] public EventCallback OnClickCallback { get; set; }

    [Inject] private AuthenticationStateProvider AuthenticationState { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }
    [Inject] private ILeaderboardService LeaderboardService { get; set; }

    private List<AppUserForLeaderboard>? users { get; set; } = null;
    private List<AppUserForReviewLeaderboard>? reviewUsers { get; set; } = null;

    private int CurrentPage;
    private int Ranking;
    private bool isLoading = true;
    private bool is2024 = false;
    private bool isReviews = false;

    private string userId = "";

    protected override async Task OnInitializedAsync()
    {
        var AuthSate = await AuthenticationState.GetAuthenticationStateAsync();

        if (!AuthSate.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("Account/Login");
        }

        var claims = AuthSate.User;
        userId = claims.FindFirstValue(ClaimTypes.NameIdentifier);

        if (isReviews) 
        {
            await FilterReviews();
        }
        else 
        {
            Ranking = await LeaderboardService.GetUserRanking(userId);

            CurrentPage = Ranking / 50;
            await LoadPagination(CurrentPage);
        }
    }

    protected async Task LoadPagination(int pageNumber)
    {
        isLoading = true;

        var incomingUsers = await LeaderboardService.GetUsersForLeaderboard(pageNumber);

        CurrentPage = pageNumber;
        users = incomingUsers.ToList();

        isLoading = false;
    }

    protected async Task FilterReviews()
    {
        if (!isReviews)
        {
            isReviews = true;

            var incomingUsers = await LeaderboardService.GetUserForReviewLeaderboard();
            reviewUsers = incomingUsers.ToList();
        } 
        else
        {
            isReviews = false;
            await LoadPagination(CurrentPage);
        }

    }
}

<style>
    .how-it-works-wrapper {
        padding: 30px;
    }

    p {
        padding: 5px 0;
        color: var(--text-color);
    }

    .img-faq {
        padding: 20px 0;
    }

    .leaderboard-table {
        margin-bottom: 30px;
        padding: 20px;
    }

    .belt-label {
        display: inline-block;
        color: black;
        color: var(--text-color);
    }

    .belt-label-wrap {
        white-space: nowrap;
    }

    .leaderboard-cell {
        vertical-align: middle;
    }

    .index-cell {
        width: 10% !important;
    }

    .country-cell {
        width: 20% !important;
    }

    .img-xp-leaderboard {
        padding-bottom: 5px;
        margin-right: -5px;
    }

    .dashboard-flag {
        margin-bottom: 5px;
        border: 1px solid lightgrey;
    }

    .dashboard-belt {
        margin-bottom: 5px;
    }

    .name-cell {
        display: grid;
    }

    .name-cell-name {
        grid-column-start: 1;
        grid-row-start: 1
    }

    .name-cell-level {
        grid-column-start: 1;
        grid-row-start: 2;
        color: gray;
        font-size: 12px
    }

    .leaderboard-link {
        color: var(--primary-color);
    }

    .is-user {
        border: solid black 2px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.9);
        background-color: var(--card-primary-color);
    }

    .is-user .belt-label, .is-user p {
        color: var(--text-dark-color);
    }

    .leaderboard-country {
        margin-top: 15px;
    }

    .leaderboard-xp {
        margin-top: 15px;
        margin-left: 10px; 
    }
</style>