@page "/map"
@using TCSA.V2.Models

<div class="card mt-5">
    <div class="card-header">
        <h5>Tasks</h5>
    </div>
    <div class="task-grid">
        @foreach (var project in Projects)
        {
            <div class="task-dot"
                 @onmouseover="() => ShowDetails(project)"
                 @onmouseout="HideDetails">
                @if (project.IsCompleted)
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="green" class="bi bi-check-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" stroke="black" stroke-width="0.5" />
                        <path d="M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z" stroke="black" stroke-width="0.5" />
                    </svg>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" stroke="black" stroke-width="0.5" />
                    </svg>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<MockProject> Projects = new List<MockProject>
    {
        new MockProject { Title = "Learn Blazor", Description = "Learn to build web apps with Blazor.", IsCompleted = true },
        new MockProject { Title = "Bootstrap Integration", Description = "Integrate Bootstrap with Blazor.", IsCompleted = false },
        new MockProject { Title = "Deploy Website", Description = "Deploy your Blazor app to the cloud.", IsCompleted = true },
        new MockProject { Title = "Design Database", Description = "Create a database schema for the app.", IsCompleted = false },
        new MockProject { Title = "Test Application", Description = "Write unit tests for the project.", IsCompleted = true },
        new MockProject { Title = "Learn CSS", Description = "Understand responsive design techniques.", IsCompleted = false },
        new MockProject { Title = "Optimize Performance", Description = "Improve app load times.", IsCompleted = true },
        new MockProject { Title = "Add Features", Description = "Add new requested features.", IsCompleted = false },
        new MockProject { Title = "Debug Issues", Description = "Resolve critical bugs.", IsCompleted = true },
        new MockProject { Title = "Finalize Project", Description = "Prepare the app for deployment.", IsCompleted = false }
    };

    private string HoveredDescription { get; set; } = string.Empty;

    private void ShowDetails(MockProject project)
    {
        HoveredDescription = $"{project.Title}: {project.Description}";
    }

    private void HideDetails()
    {
        HoveredDescription = string.Empty;
    }
}

<style>
    /* Grid container */
    .task-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(40px, 1fr));
        gap: 10px;
        margin: 20px;
        position: relative;
    }

    /* Dots */
    .task-dot {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        cursor: pointer;
        transition: transform 0.2s ease;
    }

        .task-dot:hover {
            transform: scale(1.2);
        }

    /* Completed and incomplete dots */
    .completed-dot {
        width: 24px;
        height: 24px;
    }

    .incomplete-dot {
        width: 24px;
        height: 24px;
    }

    /* Tooltip */
    .tooltip {
        position: absolute;
        bottom: -40px;
        left: 50%;
        transform: translateX(-50%);
        padding: 8px 12px;
        background-color: rgba(0, 0, 0, 0.8);
        color: #fff;
        border-radius: 4px;
        font-size: 14px;
        white-space: nowrap;
        z-index: 10;
        pointer-events: none;
    }

</style>